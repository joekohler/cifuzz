name: Tests and Linting

on:
  merge_group:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  integration_tests:
    name: integration tests (${{ matrix.os }}) (${{ matrix.bucket_index }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # testing on ubuntu-20.04 is necessary
        # testing on ubuntu-latest is for ensuring compatibility with current version
        # we have to use macos-12 as after upgrading the external
        # action for llvm setup as it seems that this is breaking
        # with macos-11
        os: [macos-12]
        bucket_index: [0]

    steps:
      - uses: actions/checkout@v3

      - name: Setup VM for cifuzz
        uses: ./.github/actions/vm_setup
        with:
          os: ${{ matrix.os }}

      # Maven is used to build the list-fuzz-tests tool which is part of cifuzz.
      # We cache the local Maven repository to speed up builds. This is based
      # on the example from:
      #
      #   https://github.com/actions/cache/blob/master/examples.md#java---maven
      #
      # Maven is also used in the integration tests to build the Maven
      # testdata projects.
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Start Colima (Docker in a Linux VM) on macOS
        if: contains(matrix.os, 'macos')
        # We need to set DOCKER_HOST to the unix socket of the Linux VM.
        # See https://github.com/abiosoft/colima/blob/main/docs/FAQ.md#cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-is-the-docker-daemon-running
        run: |
          colima start
          echo DOCKER_HOST="unix://${HOME}/.colima/default/docker.sock" >> $GITHUB_ENV

      - name: Run integration tests (Ubuntu/macOS)
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'mac')
        run: go test -v -timeout=20m code-intelligence.com/cifuzz/integration-tests/java-maven -run "^TestIntegration_Maven/containerRun$" | tee gotest.log
        shell: bash

      - name: Run integration tests (Windows)
        if: contains(matrix.os, 'windows')
        run: make test/integration/win/${{ matrix.bucket_index }}

      # Upload the original go test log as an artifact for later review.
      - name: Upload test log
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-log-${{ matrix.os }}-${{ matrix.bucket_index }}
          path: gotest.log
          if-no-files-found: error
